"use strict";angular.module("todoingApp",["ngCookies","ngTouch","trello","angular-underscore","LocalStorageModule"]).config(["TrelloApiProvider",function(a){var b=window.localStorage.getItem("trello_key"),c=window.localStorage.getItem("trello_secret");"undefined"!=typeof b&&"undefined"!=typeof c&&null!==b&&null!==c&&a.init({key:b,secret:c,scopes:{read:!0,write:!1,account:!0},AppName:"Todoing"})}]),angular.module("todoingApp").controller("MainCtrl",["$scope","trelloader",function(a,b){var c=window.localStorage.getItem("trello_key"),d=window.localStorage.getItem("trello_secret"),e=function(){return c=window.localStorage.getItem("trello_key"),d=window.localStorage.getItem("trello_secret"),a.hasCreds=null!==c&&null!==d,a.hasCreds};a.reset=function(){delete window.localStorage.trello_key,delete window.localStorage.trello_secret,delete window.localStorage.trello_organisation,delete window.localStorage.trello_token,window.location.reload()},e(),a.update=function(b){c=window.localStorage.setItem("trello_key",b.key),d=window.localStorage.setItem("trello_secret",b.secret),e()&&(a.hasCreds=!0,window.location.reload())};var f=function(c){b.getCardsForLists(c).then(function(b){console.log("cards ",b),a.cards=b})};a.organisationChanged=function(c){window.localStorage.setItem("trello_organisation",c.id),a.cards=[],a.members=[],a.lists=[],b.getTodoingLists().then(function(b){console.log("lists ",b),a.lists=b,f(b)},function(a){console.error(a)}),b.getMembers().then(function(b){console.log("members ",b),a.members=b},function(a){console.error(a)})};var g=function(){e()&&b.authenticate(function(){b.getOrganisations().then(function(b){console.log("organisations ",b),a.organisations=b;var c=window.localStorage.getItem("trello_organisation");c?a.currentOrganisation=_.filter(b,function(a){return a.id===c})[0]:a.currentOrganisation=b[0],console.log("current org :",a.currentOrganisation),a.currentOrganisation&&a.organisationChanged(a.currentOrganisation)},function(a){console.error(a)})})};g()}]),angular.module("todoingApp").service("trelloader",["TrelloApi","$q","localStorageService","$http",function(a,b,c,d){var e=!1,f=window.localStorage.getItem("trello_organisation"),g=(window.localStorage.getItem("trello_key"),window.localStorage.getItem("trello_token"),function(b){a.Authenticate().then(function(){e=!0,b(e)},function(){e=!1,b(e)})}),h=function(a){f=a},i=function(b){var c=window.localStorage.getItem("trello_organisation");return a.Rest("GET","organizations/"+c+"/members/"+b+"/cards/?open=true")},j=function(){var a=b.defer(),c=window.localStorage.getItem("trello_organisation"),e=window.localStorage.getItem("trello_key"),f=window.localStorage.getItem("trello_token");return d.get("https://api.trello.com/1/organizations/"+c+"/members/?token="+f+"&key="+e).then(function(b){a.resolve(b.data)},function(b){a.reject(b)}),a.promise},k=function(){var a=b.defer(),c=window.localStorage.getItem("trello_organisation"),e=window.localStorage.getItem("trello_key"),f=window.localStorage.getItem("trello_token");return d.get("https://api.trello.com/1/organizations/"+c+"/boards/?open=true&lists=open&fields=name&filter=open&token="+f+"&key="+e).then(function(b){a.resolve(b.data)},function(b){a.reject(b)}),a.promise},l=function(){var a=b.defer(),c=window.localStorage.getItem("trello_key"),e=window.localStorage.getItem("trello_token");return d.get("https://api.trello.com/1/members/me/organizations?token="+e+"&key="+c).then(function(b){a.resolve(b.data)},function(b){a.reject(b)}),a.promise},m=function(a){var c=b.defer(),e=window.localStorage.getItem("trello_key"),f=window.localStorage.getItem("trello_token");return d.get("https://api.trello.com/1/lists/"+a.id+"/cards?token="+f+"&key="+e+"&filter=open").then(function(b){_.map(b.data,function(b){return b.list=a}),c.resolve(b.data)},function(a){c.reject(a)}),c.promise},n=function(a){var c=[];angular.forEach(a,function(a){c.push(m(a))});var d=b.defer();return b.all(c).then(function(a){var b=_.flatten(a);d.resolve(b)}),d.promise},o=function(){var a=b.defer();return k().then(function(b){var c=/(doing|to do)/g,d=function(a){return a.name.toLowerCase().match(c)},e=_.chain(b).pluck("lists").flatten().filter(d).value();a.resolve(e)}),a.promise};return{authenticate:g,getOrganisations:l,getCardsForLists:n,getMembers:j,getTodoingLists:o,setOrganisation:h,getMemberCards:i}}]),angular.module("todoingApp").directive("todoing",function(){return{templateUrl:"views/card.html",scope:{member:"=",cards:"=",organisation:"@"},restrict:"EA",link:function(a,b,c){},controller:["$scope","$attrs",function(a,b){a.cardsLoaded=!1,a.myCards=[];var c=/(doing)/g,d=/(to do)/g,e=function(b){return-1!==b.idMembers.indexOf(a.member.id)},f=function(a){return a.list.name.toLowerCase().match(d)},g=function(a){return a.list.name.toLowerCase().match(c)};a.$watch(b.cards,function(b){a.cardsLoaded="undefined"!=typeof b,a.myCards=_.filter(a.cards,e),a.myTodoCards=_.filter(a.myCards,f),a.myDoingCards=_.filter(a.myCards,g)})}]}}),angular.module("todoingApp").run(["$templateCache",function(a){a.put("views/card.html",'<div class="panel panel-default panel-todoing" ng-show="myCards.length"> <div class="panel-heading">{{member.fullName}} <span class="label label-primary">{{myCards.length}}</span></div> <div class="panel-body"> <div class="col-sm-6"> <h3>to do <span class="label label-primary">{{myTodoCards.length}}</span></h3> <ol> <li ng-repeat="card in myTodoCards"> <a href="{{card.url}}">{{card.name}}</a> </li> </ol> </div> <div class="col-sm-6"> <h3>doing <span class="label label-success">{{myDoingCards.length}}</span></h3> <ol> <li ng-repeat="card in myDoingCards"> <a href="{{card.url}}">{{card.name}}</a> </li> </ol> </div> </div> </div>'),a.put("views/main.html",'<nav class="navbar navbar-default"> <div class="container-fluid"> <ul class="nav navbar-nav"> <li><a href="{{currentOrganisation.url}}"><h3>{{currentOrganisation.displayName}}</h3></a></li> </ul> <ul class="nav navbar-nav navbar-right" ng-show="hasCreds"> <li><select ng-model="currentOrganisation" ng-options="currentOrganisation as currentOrganisation.displayName for currentOrganisation in organisations" ng-change="organisationChanged(currentOrganisation)"> </select> </li> <li ng-click="reset()"><a href="#">reset credentials</a></li> </ul> </div> </nav> <div class="row" ng-show="hasCreds"> <div class="col-sm-6" ng-repeat="member in members"> <todoing member="member" cards="cards" organisation="currentOrganisation.id"></todoing> </div> </div> <div class="container" ng-show="!hasCreds"> <h3>looks like you dont have any credentials...</h3> <h5><a href="https://trello.com/app-key">get you application key and secret here</a></h5> <form novalidate class="simple-form"> <div class="form-group"> key: <input type="text" class="form-control" ng-model="creds.key"><br> </div> <div class="form-group"> secret: <input type="text" class="form-control" ng-model="creds.secret"><br> </div> <button type="submit" class="btn btn-success" ng-click="update(creds)" value="Save">save</button> </form> </div>')}]);